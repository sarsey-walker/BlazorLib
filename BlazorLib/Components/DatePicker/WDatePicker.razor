@using System.Globalization

<div class="form-group my-component">
    <label>@Title</label>
    <input type="text"
           class="form-control"
           value="@FormatValueAsString(Value)"
           @onchange="@OnChange" />

    <button @onclick="OpenCalendar">Open Calendar</button>
</div>

@if (showCalendar)
{
    <CustomCalendar 
        Date="@Value" 
        SelectedDateChanged="@((DateTime? date) => Value = date.Value)"
                    MonthChanged="@((DateTime? date) => {newMonth = date.Value; dias = new List<int>(){random.Next(30)};})"
                    MarkedDays="dias" />
}

@code {
    private const string DateFormat = "yyyy-MM-dd";
    CultureInfo provider = CultureInfo.InvariantCulture;
    private DateTime _value;
    private DateTime newMonth;
    private List<int> dias;

    private Random random = new Random();


    [Parameter] public string? Title { get; set; }
    [Parameter]
    public DateTime Value
    {
        get
        {
            return _value;
        }
        set
        {
            
            if (EqualityComparer<DateTime>.Default.Equals(value, _value))
            {
                return;
            }
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }

    [Parameter] public EventCallback<DateTime> ValueChanged { get; set; }
    private void OnChange(ChangeEventArgs args)
    {
        try
        {
            Value = (DateTime)(object)DateTime
                .ParseExact(args.Value!.ToString()!, DateFormat, provider);
        }
        catch
        {
            Value = default(DateTime)!;
        }
    }
    protected string FormatValueAsString(DateTime? value)
    {
        switch (value)
        {
            case DateTime dateTimeValue:
                var r = BindConverter.FormatValue(dateTimeValue, DateFormat, provider);
                return r;
            default:
                return string.Empty;
        }
    }


    private bool showCalendar = false;
    private void OpenCalendar()
    {
        showCalendar = !showCalendar;
    }

    private void OnDateSelected(DateTime date)
    {
        Value = date;
        showCalendar = false;
    }
}
